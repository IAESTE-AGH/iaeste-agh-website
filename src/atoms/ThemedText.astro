---
import type { Color, TextVariant } from '@/types';
import type { HTMLTag } from 'astro/types';

type Props = {
	color?: Color;
	children: string | string[] | HTMLElement | HTMLElement[];
	isBold?: boolean;
	variant?: TextVariant;
};

const { color, variant = 'body', isBold = false } = Astro.props;

var Element: HTMLTag = 'p';
switch (variant) {
	case 'display':
	case 'h1':
		Element = 'h1';
		break;
	case 'h2':
		Element = 'h2';
		break;
	case 'h3':
		Element = 'h3';
		break;
	case 'h4':
		Element = 'h4';
		break;
	case 'h5':
		Element = 'h5';
		break;
	case 'h6':
		Element = 'h6';
		break;
	case 'body':
		Element = 'p';
		break;
	case 'link':
		Element = 'span';
		break;
	default:
		Element = 'p';
		break;
}
---

<Element
	class:list={[variant, { bold: isBold }, 'oneLine']}
	style={{ color: color }}
>
	<slot name="beforeIcon" />
	<slot />
	<slot name="afterIcon" />
</Element>

<style>
	.oneLine {
		display: flex;
		flex-direction: row;
		gap: 4px;
		align-items: top;
	}
</style>
