---
import type { Color, TextVariant } from '@/types';
import ThemedText from './ThemedText.astro';
import type { CSSProperty } from 'astro/types';

type Props = {
    href: string;
    children: string | HTMLElement | HTMLElement[];
    button?: boolean;
    bold?: boolean;
    variant?: TextVariant;
    color?: Color;
    class?: string;
};

const {
    href,
    button: asButton = false,
    bold,
    variant,
    color,
    class: className,
    ...rest
} = Astro.props;

const target = href.startsWith('http')
    ? href.startsWith(new URL(Astro.request.url).origin)
        ? '_self'
        : '_blank'
    : '_self';
---

<a
    href={href}
    target={target}
    class:list={[
        { button: asButton },
        { link: !asButton },
        variant || '',
        className,
    ]}
    {...rest}
>
    <ThemedText variant={variant} bold={bold} color={color} centered={asButton}>
        <slot name="beforeIcon" slot="beforeIcon" />
        <slot />
        <slot name="afterIcon" slot="afterIcon" />
    </ThemedText>
</a>

<style define:vars={{ 'colors-text-link': color }}></style>
